services:
  taskdb:
    image: postgres:17
    container_name: task-postgres
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: Varshika123
      POSTGRES_DB: taskdb
    ports:
      - "5433:5432"
    networks:
      - my-network
    volumes:
      - task_postgres_data:/var/lib/postgresql/data
  
  userdb:
    image: postgres:17
    container_name: user-postgres
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: Varshika123
      POSTGRES_DB: userdb
    ports:
      - "5434:5432"
    volumes:
      - user_postgres_data:/var/lib/postgresql/data
    networks:
      - my-network

  user-service:
    build: ./user-service
    container_name: user-service
    depends_on:
      - userdb
    environment:
      DB_URL: postgresql+asyncpg://postgres:Varshika123@user-postgres:5432/userdb
      JWT_SECRET_KEY: super-secret-change-me
      JWT_ALGORITHM: HS256
    ports:
      - "8000:8000"
    networks:
      - my-network

  task-service:
    build: ./task-service
    container_name: task-service
    depends_on:
      - taskdb
    environment:
      DB_URL: postgresql+asyncpg://postgres:Varshika123@task-postgres:5432/taskdb
    ports:
      - "8001:8000"
    networks:
      - my-network

  gateway-service:
    build: ./gateway-service
    container_name: gateway-service
    depends_on:
      - user-service
      - task-service
    ports:
      - "8002:8000"
    networks:
      - my-network

  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - user-service
      - task-service
      - gateway-service
    networks:
      - my-network


networks:
  my-network:
    driver: bridge

volumes:
  task_postgres_data:
  user_postgres_data: